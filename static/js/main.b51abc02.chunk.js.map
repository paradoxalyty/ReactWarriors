{"version":3,"sources":["components/MovieItem.jsx","components/MovieTabs.jsx","components/Pagination.jsx","components/MoviesWillWatch.jsx","components/App.jsx","api/api.js","index.js"],"names":["MovieItem","props","state","willWatch","this","movie","removeMovie","addMovieToWillWatch","removeMovieFromWillWatch","className","src","backdrop_path","poster_path","alt","title","vote_average","onClick","bind","type","setState","Component","MovieTabs","nextProps","nextState","nextContext","sort_by","updateSortBy","handleClick","value","getClassLink","classnames","Pagination","changePage","num","MoviesWillWatch","moviesWillWatch","length","map","key","id","App","getMovies","fetch","page","then","response","json","data","movies","results","updateMovies","filter","item","updateMoviesWillWatch","nextPage","currentPage","prevProps","prevState","snapshot","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b51abc02.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nexport class MovieItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            willWatch: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            movie,\r\n            removeMovie,\r\n            addMovieToWillWatch,\r\n            removeMovieFromWillWatch\r\n        } = this.props;\r\n\r\n        return (\r\n            <div className=\"card\">\r\n                <img\r\n                    className=\"card-img-top\"\r\n                    src={`https://image.tmdb.org/t/p/w500${movie.backdrop_path ||\r\n                    movie.poster_path}`}\r\n                    alt=\"\"\r\n                />\r\n                <div className=\"card-body d-flex flex-wrap flex-column align-items-start\">\r\n                    <h6 className=\"card-title\">{movie.title}</h6>\r\n                    <div className=\"d-flex flex-wrap align-items-center\">\r\n                    </div>\r\n                    <p className=\"mb-2\">Rating: {movie.vote_average}</p>\r\n\r\n                    <button className=\"mb-2\" onClick={removeMovie.bind(null, movie)}>Delete movie</button>\r\n\r\n                    {/*{this.state.willWatch ? (\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-success\"\r\n                                onClick={() => {\r\n                                    this.setState({\r\n                                        willWatch: false,\r\n                                    });\r\n                                    removeMovieFromWillWatch(movie);\r\n                                }}\r\n                            >\r\n                                Remove Will Watch\r\n                            </button>\r\n                        ) : (\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-secondary\"\r\n                                onClick={() => {\r\n                                    this.setState({\r\n                                        willWatch: true,\r\n                                    });\r\n                                    addMovieToWillWatch(movie);\r\n                                }}\r\n                            >\r\n                                Add Will Watch\r\n                            </button>\r\n                        )}*/}\r\n\r\n                    {/*\r\n                        Попытался из двух кнопок сделать одну, но в консоли вылетает вот эта строка - ./src/components/MovieItem.jsx\r\n                        Line 70:33:  Nested block is redundant  no-lone-блочкс\r\n                        Не знаю что с этим делать (((\r\n                        */}\r\n\r\n                    <button\r\n                        type=\"button\"\r\n                        className={this.state.willWatch ? \"btn align-self-end btn-success\" : \"btn align-self-end btn-secondary\"}\r\n                        onClick={() => {\r\n                            this.setState({\r\n                                willWatch: !this.state.willWatch,\r\n                            });\r\n                            // eslint-disable-next-line\r\n                            {\r\n                                this.state.willWatch ? removeMovieFromWillWatch(movie) : addMovieToWillWatch(movie)\r\n                            }\r\n                        }}\r\n                    >\r\n                        {this.state.willWatch ? \"Remove Will Watch\" : \"Add Will Watch\"}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport classnames from 'classnames';\r\n\r\nexport class MovieTabs extends Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n\r\n        // if(nextProps.sort_by !== this.props.sort_by) {\r\n        //     return true;\r\n        // } else {\r\n        //     return false;\r\n        // }\r\n\r\n        // Эта запись равнозначна записи в комментарии выше.\r\n        return nextProps.sort_by !== this.props.sort_by;\r\n    }\r\n\r\n    render() {\r\n        const {sort_by, updateSortBy} = this.props;\r\n\r\n        // const handleClick = value => {\r\n        //     return () => {\r\n        //         updateSortBy(value);\r\n        //     };\r\n        // };\r\n\r\n        // Эта запись равнозначна записи в комментарии выше.\r\n        const handleClick = value => () => {\r\n            updateSortBy(value);\r\n        };\r\n\r\n        const getClassLink = value => {\r\n            // Не уверен что это правильное решение, но ничего другого не смог придумать.\r\n            return classnames('btn nav-link', {'active': sort_by === value});\r\n            // return `btn nav-link ${sort_by === value ? \"active\" : \"\"}`\r\n        };\r\n\r\n        return (\r\n            <ul className=\"tabs nav nav-pills justify-content-center\">\r\n                <li className=\"nav-item\">\r\n                    <div\r\n                        // className={`nav-link ${\r\n                        //     sort_by === \"popularity.desc\" ? \"active\" : \"\"\r\n                        // }`}\r\n                        className={getClassLink(\"popularity.desc\")}\r\n                        onClick={handleClick(\"popularity.desc\")}\r\n                    >\r\n                        Popularity desc\r\n                    </div>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <div\r\n                        // className={`nav-link ${\r\n                        //     sort_by === \"revenue.desc\" ? \"active\" : \"\"\r\n                        // }`}\r\n                        className={getClassLink(\"revenue.desc\")}\r\n                        onClick={handleClick(\"revenue.desc\")}\r\n                    >\r\n                        Revenue desc\r\n                    </div>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <div\r\n                        // className={`nav-link ${\r\n                        //     sort_by === \"vote_average.desc\" ? \"active\" : \"\"\r\n                        // }`}\r\n                        className={getClassLink(\"vote_count.desc\")}\r\n                        onClick={handleClick(\"vote_count.desc\")}\r\n                    >\r\n                        Vote count desc\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport const Pagination = ({changePage}) => {\r\n\r\n    const handleClick = num => () => {\r\n        changePage(num);\r\n    };\r\n\r\n    return (<>\r\n        <button onClick={handleClick(-1)} className=\"m-3\">Prev</button>\r\n        <button onClick={handleClick(1)} className=\"m-3\">Next</button>\r\n    </>)\r\n};","import React, {Component} from \"react\";\r\n\r\nexport class MoviesWillWatch extends Component {\r\n    render() {\r\n        const {moviesWillWatch} = this.props;\r\n        return (\r\n            <>\r\n                <h4 className=\"text-center\">Will Watch: {moviesWillWatch.length}</h4>\r\n                <ul className=\"list-group\">\r\n                    {moviesWillWatch.map(movie => (\r\n                        <li key={movie.id} className=\"list-group-item\">\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <p>{movie.title}</p>\r\n                                <p>{movie.vote_average}</p>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\n// import {moviesData} from '../moviesData';\r\nimport {MovieItem} from './MovieItem';\r\nimport {API_URL, API_KEY_3} from '../api/api';\r\nimport {MovieTabs} from './MovieTabs';\r\nimport {Pagination} from './Pagination';\r\nimport {MoviesWillWatch} from \"./MoviesWillWatch\";\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            movies: [],\r\n            moviesWillWatch: [],\r\n            sort_by: \"popularity.desc\",\r\n            page: 1,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMovies();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if (prevState.sort_by !== this.state.sort_by) {\r\n            this.getMovies();\r\n        }\r\n\r\n        if (prevState.page !== this.state.page) {\r\n            this.getMovies();\r\n            console.log(this.state.page);\r\n        }\r\n    }\r\n\r\n    getMovies = () => {\r\n        fetch(`${API_URL}/discover/movie?api_key=${API_KEY_3}&sort_by=${this.state.sort_by}&page=${this.state.page}`)\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .then((data) => {\r\n                this.setState({\r\n                    movies: data.results,\r\n                })\r\n            })\r\n    };\r\n\r\n    removeMovie = (movie) => {\r\n        const updateMovies = this.state.movies.filter(function (item) {\r\n            return item.id !== movie.id;\r\n        });\r\n\r\n        this.setState({\r\n            movies: updateMovies,\r\n        });\r\n\r\n        this.removeMovieFromWillWatch(movie);\r\n    };\r\n\r\n    addMovieToWillWatch = movie => {\r\n\r\n        // const updateMoviesWillWatch = [...this.state.moviesWillWatch];\r\n        // updateMoviesWillWatch.push(movie);\r\n        const updateMoviesWillWatch = [...this.state.moviesWillWatch, movie]; // запись равнозначна верхним двум строкам\r\n\r\n        this.setState({\r\n            moviesWillWatch: updateMoviesWillWatch,\r\n        })\r\n    };\r\n\r\n    removeMovieFromWillWatch = (movie) => {\r\n        const updateMoviesWillWatch = this.state.moviesWillWatch.filter(function (item) {\r\n            return item.id !== movie.id;\r\n        });\r\n\r\n        this.setState({\r\n            moviesWillWatch: updateMoviesWillWatch,\r\n        });\r\n    };\r\n\r\n    updateSortBy = value => {\r\n        this.setState({\r\n            sort_by: value,\r\n        });\r\n    };\r\n\r\n    changePage = (num) => {\r\n        let currentPage = this.state.page;\r\n        let nextPage;\r\n\r\n        if (currentPage === 1 && num === -1) {\r\n            nextPage = 500;\r\n        } else if (currentPage === 500 && num === 1) {\r\n            nextPage = 1;\r\n        } else {\r\n            nextPage = currentPage + num;\r\n        }\r\n\r\n        this.setState({\r\n            page: nextPage,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-9\">\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-12\">\r\n                                <MovieTabs\r\n                                    sort_by={this.state.sort_by}\r\n                                    updateSortBy={this.updateSortBy}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {this.state.movies.map((movie) => {\r\n                                return (\r\n                                    <div className=\"col-md-6 m mb-4\" key={movie.id}>\r\n                                        <MovieItem\r\n                                            movie={movie}\r\n                                            removeMovie={this.removeMovie}\r\n                                            addMovieToWillWatch={this.addMovieToWillWatch}\r\n                                            removeMovieFromWillWatch={this.removeMovieFromWillWatch}\r\n                                        />\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"m-auto\">\r\n                                <Pagination changePage={this.changePage}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-9 col-md-3 col-lg-3\">\r\n                        <MoviesWillWatch moviesWillWatch={this.state.moviesWillWatch}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","export const API_URL = \"https://api.themoviedb.org/3\";\r\n\r\nexport const API_KEY_3 = \"3f4ca4f3a9750da53450646ced312397\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}